(() => {
  const content = document.querySelector('#content');
  const milistamp = () => window.performance
    && window.performance.now
    && window.performance.timing
    && window.performance.timing.navigationStart
    ? window.performance.now() + window.performance.timing.navigationStart
    : Date.now();
  let last, sstamp, estamp, sloc, eloc;
  const epsilon = 0.1;
  const pending = [];
  const clearPending = () => pending.forEach((ep) => clearTimeout(ep));

  var box1 = document.getElementById('scrollbox');
  var statusdiv = document.getElementById('statusdiv')
  box1.addEventListener('wheel', function(ev) {
  	content.scrollTop += ev.deltaY;
  });

  box1.addEventListener('touchstart', function(ev){
      pending.forEach((ep) => clearTimeout(ep))
      last = sloc = ev.changedTouches[0].clientY;
      sstamp = milistamp();
      ev.preventDefault();
  }, false);

  box1.addEventListener('touchmove', function(ev){
      const delta = (last - ev.changedTouches[0].clientY);
      content.scrollTop += delta; //natural scrolling
      last = ev.changedTouches[0].clientY;
      ev.preventDefault();
  },false);

  box1.addEventListener('touchend', function(ev){
	  console.log("c");
      estamp = milistamp()
      eloc = ev.changedTouches[0].clientY;
      const locDelta = sloc - eloc;
      const stampDelta = estamp - sstamp;
      let speed = locDelta / stampDelta;
      let n = 0;
      const friction = 0.02;
      const multiplier = 10;
      const delay = 10;
      while(Math.abs(speed) > epsilon) {
        (speed => {
          pending.push(setTimeout(() => {
            content.scrollTop += speed * 10;
          }, 10 * (n++)));
        })(speed);
        speed = speed * (1 - friction);
      }
      ev.preventDefault();
  },false);
})(); //IIFE
